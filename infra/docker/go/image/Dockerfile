# build
FROM golang:1.17.6-alpine as build

ENV ENVIRONMENT=${ENVIRONMENT}
ENV API_PROTOCOL=${API_PROTOCOL}
ENV API_HOST=${API_HOST}
ENV API_PORT=${API_PORT}
ENV FRONT_PROTOCOL=${FRONT_PROTOCOL}
ENV FRONT_PORT=${FRONT_PORT}
ENV POSTGRES_URL=${POSTGRES_URL}
ENV POSTGRES_MAX_CONNECTIONS=${POSTGRES_MAX_CONNECTIONS}
ENV POSTGRES_MAX_IDLE_CONNECTIONS=${POSTGRES_MAX_IDLE_CONNECTIONS}
ENV COGNITO_REGION=${COGNITO_REGION}
ENV COGNITO_USERPOOL_ID=${COGNITO_USERPOOL_ID}
ENV COGNITO_SECRET=${COGNITO_SECRET}
ENV CLI_API_URL=${CLI_API_URL}
ENV EMAIL_HOST=${EMAIL_HOST}
ENV EMAIL_HOST_USER=${EMAIL_HOST_USER}
ENV EMAIL_HOST_PASS=${EMAIL_HOST_PASS}
ENV EMAIL_PORT=${EMAIL_PORT}
ENV SENTRY_DSN=${SENTRY_DSN}

ENV ROOT=/enva
WORKDIR ${ROOT}

RUN apk update && apk add git
COPY go.mod go.sum ./
RUN go mod tidy

COPY . ${ROOT}/
RUN CGO_ENABLED=0 GOOS=linux go build -o ${ROOT}/bin/server/main ${ROOT}/service/api/cmd/server/main.go

# prod
FROM alpine:latest as image

# RUN apk add --update --no-cache ca-certificates

ENV ROOT=/enva
WORKDIR ${ROOT}

COPY --from=build ${ROOT}/bin/server/main ${ROOT}

EXPOSE 8080
CMD ["/enva/main"]

