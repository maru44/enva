name: Postgres/migration
on:
  workflow_dispatch: {}
  push:
    branches:
      - master
    paths:
      - "service/admin/internal/migration/postgres"
env:
  AWS_REGION: ap-northeast-1
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: set up
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
        id: go
      - name: check out
        uses: actions/checkout@v2
      - name: cp direnv
        run: cp .envrc.example .envrc
      - name: Direnv
        uses: HatsuneMiku3939/direnv-action@v1
      - name: cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
  buildAndUpload:
    needs: setup
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
      # db
      POSTGRES_URL: ${{ secrets.POSTGRES_URL}}
      POSTGRES_MAX_CONNECTIONS: ${{ secrets.POSTGRES_MAX_CONNECTIONS }}
      POSTGRES_MAX_IDLE_CONNECTIONS: ${{ secrets.POSTGRES_MAX_IDLE_CONNECTIONS }}
      # not required for golang
      # ecr
      AWS_REGION: ap-northeast-1
      ECR_REGISTRY_API: ${{ secrets.ECR_REGISTRY_API }}
      ECR_REPOSITORY_MIGRATION: ${{ secrets.ECR_REPOSITORY_MIGRATION }}
    steps:
      - uses: actions/checkout@v2
      - name: aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.3.3
      - name: image and push
        id: image-and-push
        run: |
          make container/migration/image
          make container/migration/push
  apiTagUp:
    needs:
      - buildAndUpload
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
        id: go
      - name: tag up
        run: make tag/migration
      - name:
        if: success()
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GH_BOT_TOKEN }}
          base: master
          branch: tag_up_migration
          delete-branch: true
          commit-message: migration tag up
          title: migration tag up
          body: |
            docker api migration is updated
